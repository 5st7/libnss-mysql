$Id$

Q: Why doesn't ProFTPD see my accounts in the database?
A: You must set 'PersistentPasswd' to 'Off' in your proftpd configuration.
   You may also want to set your PAM config to use pam_unix.so.  A Linux
   /etc/pam.d/ftp example:

   auth       required     /lib/security/pam_stack.so service=system-auth
   account    required     /lib/security/pam_stack.so service=system-auth
   password   required     /lib/security/pam_stack.so service=system-auth
   session    required     /lib/security/pam_stack.so service=system-auth

   Where /etc/pam.d/system-auth is:

   auth        required      /lib/security/pam_env.so
   auth        sufficient    /lib/security/pam_unix.so likeauth nullok
   auth        required      /lib/security/pam_deny.so

   account     required      /lib/security/pam_unix.so

   password    required      /lib/security/pam_cracklib.so retry=3 type=
   password    sufficient    /lib/security/pam_unix.so nullok use_authtok md5 shadow
   password    required      /lib/security/pam_deny.so

   session     required      /lib/security/pam_limits.so
   session     required      /lib/security/pam_unix.so


Q: Why do I get the following message when I try to use 'passwd' on Solaris?
   "Supported configurations for passwd management are as follows" ...
A: Sun chose to write their unix PAM module to only allow a very restrictive
   configuration in /etc/nsswitch.conf.  You must now specify '-r files' on
   the 'passwd' command-line to manipulate the password file.  For example:
   passwd -r files username
   I know this sucks, so figuring out a better workaround is on my TODO list.

Q: Why do I get the following message when compiling on Solaris?

    Undefined                       first referenced
     symbol                             in file
    __udivdi3                           /usr/local/lib/mysql/libmysqlclient.so
A: You're using a newer (3.x) version of gcc which seems to create libraries
   that need libgcc.  There are a couple solutions that I know of; BOTH
   REQUIRE A COUPLE OF ADDITIONAL 'ld' PARAMETERS THAT ARE VERY IMPORTANT!
   1) Link against gcc libs - add something like this to the final link line:
      -l gcc -L/path/to/gcc/lib -z nodelete -Bgroup
   2) Use GNU ld; use the same link line but make sure to add
      -z nodelete -Bgroup
      to your 'ld' command
   I plan to automate a way around this.. But for now, this is necessary.
