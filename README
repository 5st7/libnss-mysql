# $Id$

MySQL for NSS systems
=====================
Please read the file INSTALL for generic installation details.

NOTE: Solaris 9 is not fully unsupported.  Sun's PAM modules have become
      so restrictive that you can't even properly authenticate via PAM
      anymore if there's a "mysql" in /etc/nsswitch.conf.  System routines
      like getpwnam will still work, so you can work around it some by
      compiling your apps with PAM turned *off* - however logging in via
      system programs such as telnet will fail.  I'll be addressing this
      when I can; unfortunately it requires a PAM module that I'd need to
      write.  It's on my TODO list ...

Prerequisites
=============
    o A functional compile environment (system headers, C compiler, ...)
    o GNU Make
    o MySQL client library & header files (local)
    o MySQL server (local or remote)

For the impatient
=================
    o Build:
      o ./configure
      o make
      o make install

    o Edit /etc/nss_mysql.cfg and /etc/nss_mysql_root.cfg.  Pay special
      attention to the socket location.  The default may not work in your
      environment!

    o Add data to MySQL. The default configs will work well with the sample
      sql database in sample/sample_database.sql.  Read that file for more
      details on the sample database.

    o Edit /etc/nsswitch.conf and add 'mysql' to passwd/shadow/group

    o Edit (or create) /etc/my.cnf and add a new section called [libnss_mysql]
      You may specify any of these options:
        compress
        debug
        init-command
        user
        password
        connect-timeout
      IE:
        [libnss_mysql]
        connect-timeout=5

   *************************************************************************
   * IT IS HIGHLY RECOMMENDED THAT YOU SET connect-timeout TO A RELATIVELY *
   * LOW NUMBER, ELSE YOU MAY FIND YOURSELF UNABLE TO LOG IN (EVEN AS ROOT)*
   * IF A SERVER BECOMES UNREACHABLE                                       *
   *************************************************************************

64-bit Support (SPARC V9/Solaris 7+)
====================================
You need to produce BOTH a 32-bit and 64-bit library, so get the 32-bit
one working first.  32-bit programs (most still are) will use the 32-bit
library, and 64-bit programs will use the 64-bit version.

You must have a set of 32-bit libraries, and another set of 64-bit
libraries: MySQL, libc, libm, etc ... Solaris tends to put 64-bit
libraries (and binaries) in a subdirectory named 'sparcv9' - so 64-bit
versions of libc, libm, etc, can be found in /usr/lib/sparcv9.

    o Build a 64-bit MySQL library and install it in a DIFFERENT place than
      your 32-bit MySQL library - IE /usr/local/lib/sparcv9/mysql
    o Build a 64-bit libnss-mysql:
      o Set CFLAGS settings in your environment to:
            gcc:      "-m64"
            Sun's CC: "-xarch=v9"
      o Re-run 'configure', pointing it at your 64-bit MySQL library
        (using --with-mysql-lib=...)
      o Edit Makefile and change 'libdir' to be '/usr/lib/sparcv9'
      o Compile and install
    o Test it by using programs such as 'ls' and 'ps' from the /usr/bin/sparcv9
      directory.

At some point in the future, 64-bit support will be integrated.

Please also note that the MySQL folks don't yet support 64-bit; my limited
testing, however, has shown that at least the client libraries seem to
work OK.

Debugging
=========
    See the file DEBUGGING

Tested with
===========
    Corel (1.2 - Debian 2.1), MySQL 3.21.33b
    RedHat 6.1, MySQL 3.20.??
    RedHat 7.1, MySQL 3.23.49a
    RedHat 7.2, MySQL 3.23.49a
    RedHat 7.3, MySQL 3.23.49a & 3.23.52
    RedHat 8.0, MySQL 3.23.52

    Solaris 9/sparc, MySQL 3.23.52, gcc 3.1 NOTE: PAM programs will fail
    Solaris 8/x86,   MySQL 3.23.52, gcc 3.1
    Solaris 8/sparc, MySQL 3.23.52, gcc 2.95.3, 3.0.2 (32 & 64-bit), 3.2,
                                    Forte Developer 7 C 5.4 (Sun Workshop)
    Solaris 7/sparc, MySQL 3.23.53 (binary distribution), gcc 2.95.2
    Solaris 6/sparc, MySQL 3.23.39, gcc 2.95.2


