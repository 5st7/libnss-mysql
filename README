# $Id$

MySQL for NSS systems
=====================

Please read the file INSTALL for generic installation details.

NOTE: Solaris 9 is currently unsupported.  Sun changed something in the
      API that's preventing the library from properly functioning.

For the impatient:
    Linux:
        ./configure
	make
	make install
    Solaris (gcc):
        sh -c "CFLAGS='-m32' ./configure"
        sh -c "LD_OPTIONS='-z nodelete' make" 
        make install
    Solaris (cc):
        Unsupported at this time

    It's very important to follow the Solaris lines above.  In some future
    version you won't have to do the above.  Here's why you need each line
    CFLAGS=-m32 - Compile a 32-bit library.  NOTE: your MySQL installation
                  must also be 32-bit.  If you build from source using a gcc
                  that builds 64-bit targets, rebuild and reinstall MySQL
                  using CFLAGS=-m32 and CXXFLAGS=-m32 or you won't be able
                  to create a working libnss-mysql library.
    LD_OPTIONS='-z nodelete' - There are bugs in various Solaris routines
                  which will cause memory leaks unless we tell the linker
                  to disallow the system from dlclose()'ing libnss-mysql.

    You need to use GNU make.  Solaris' make will choke.  You may need
    to add the full path to your GNU make in the example above.
            
    Edit /etc/nss_mysql.cfg and /etc/nss_mysql_root.cfg.  Pay special
    attention to the socket location.  The default may not work in your
    environment!
    Edit /etc/nsswitch.conf and add 'mysql' to passwd/shadow/group
    The default configs will work well with the sample sql database in
    sample/sample_database.sql.  Read that file for more details on the
    sample database.

    On systems with older or nonstandard MySQL installations, you may
    need to use the --with-mysql-lib and/or --with-mysql-inc options.

Debugging:
    Set the config option 'priority' (in the [global] section) to debug.
    Since there are a LOT of debugging messages, you can pick which type(s)
    you want.  Set the config option 'debug_flags' to be the sum of the
    options below that you want:

    MEMORY (malloc, free, etc)          1
    FUNCTION (enter/exit w/ status)     2
    CONNECT (MySQL connect/disconnect)  4
    QUERY (MySQL queries)               8 
    PARSE (File & query result parsing) 16
    FILE (File opening/closing)         32

    For example, if you want all options, set 'debug_flags' to 63
    If you want just CONNECT, set it to 4.  If you want CONNECT
    and QUERY, set it to 12.

    Since there's a period of time where the library has not yet
    loaded your config, the library defaults to logging to
    auth.alert until the config is loaded and the defaults are
    overridden.  If you're not getting ANY messages, it is possible
    that the error is before the config is loaded.  You *should*
    have an error message wherever your auth.alert messages go.
    If you do not, I recommend doing a quick trace ('strace' on Linux,
    'truss' on Solaris) of a quick command such as 'id' and looking for
    whether the library even gets loaded, if the library tries to open your
    config file, etc ...  Just 'strace id username-in-sql' (or
    'truss id username-in-sql') should do the trick.
    You could also edit nss_mysql.h, change DEF_PRIO to LOG_DEBUG,
    change DEF_DFLAGS to D_ALL, recompile & reinstall.  If that doesn't
    help, the library is probably not being loaded; make sure you've added
    'mysql' to /etc/nsswitch.conf.  Please also note that daemons, including
    nscd, will not see changes to nsswitch.conf unless they're restarted.
    I recommend shutting off nscd until you've debugged your libnss-mysql
    installation.

Solaris support:
    libnss-mysql appears to work fine under the Solaris' I've tested (see
    below).  There are a few things you need to pay special attention to
    when compiling (above).  I plan to fully support Solaris as the
    library matures.  As it stands now, it should work for most people.
    If it doesn't, *please* let me know so I can make sure to investigate.

Tested with:
    Corel (1.2 - Debian 2.1) and MySQL 3.21.33b
    RedHat 6.1 and MySQL 3.20.something
    RedHat 7.1 and MySQL 3.23.49a
    RedHat 7.2 and MySQL 3.23.49a
    RedHat 7.3 and MySQL 3.23.49a

    Solaris 8/x86, MySQL 3.23.52, gcc 3.1
    Solaris 8/sparc, MySQL 3.23.52, gcc (64bit) 3.0.2


